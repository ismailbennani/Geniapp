// <auto-generated />
using System;
using Geniapp.Infrastructure.Database.MasterDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Geniapp.Infrastructure.Database.MasterDatabase.Migrations
{
    [DbContext(typeof(MasterDbContext))]
    [Migration("20241008175923_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Geniapp.Infrastructure.Database.MasterDatabase.Shard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("Id");

                    b.ToTable("Shards");
                });

            modelBuilder.Entity("Geniapp.Infrastructure.Database.MasterDatabase.TenantShardAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ShardId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ShardId");

                    b.HasIndex("TenantId")
                        .IsUnique();

                    b.ToTable("TenantShardAssociations");
                });

            modelBuilder.Entity("Geniapp.Infrastructure.Database.MasterDatabase.TenantShardAssociation", b =>
                {
                    b.HasOne("Geniapp.Infrastructure.Database.MasterDatabase.Shard", "Shard")
                        .WithMany()
                        .HasForeignKey("ShardId");

                    b.Navigation("Shard");
                });
#pragma warning restore 612, 618
        }
    }
}
